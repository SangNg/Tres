@using WebMatrix.Data

@{
    Layout = "~/_Layout.cshtml";
    Page.Title = "Add Players";

    //Database connection
    string connectionString = @"Data Source=(LocalDB)\MSSQLLocalDB;AttachDbFilename=|DataDirectory|\Database.mdf;Integrated Security=True";
    string provider = "System.Data.SqlClient";
    Database db = Database.OpenConnectionString(connectionString, provider);

    if (Request.Cookies["LoginCookie"] is null || Request.Cookies["LoginCookie"].Value != "true")
    {
        Response.Redirect("~/default.cshtml");
    }

    //Gather roomcode
    int roomCode = Convert.ToInt32(Request.Url.AbsolutePath.Split('/')[2]);

    int number = 1;         //table number will be added later
    int rebuy = 0;          //number of rebuys standard on 0
    string error = "";
    Validation.Add("name", Validator.StringLength(15, 1, "Name has to be between 1 - 15 digits"));

    //When buttons has been clicked
    if (IsPost)
    {
        dynamic room = db.QuerySingle("SELECT * FROM Room WHERE Room_Code = @0", roomCode);
        int maxplayerstable = room.Tbl_Max_Size;
        int minplayerstable = room.Tbl_Min_Size;
        int maxtables = room.Tbl_Amount;
        int maxplayerstotal = maxplayerstable * maxtables;
        int playercount = db.QueryValue("SELECT Count(Name) FROM Players WHERE Room_Code = @0", roomCode);

        //If the clicked button is AddName and the number of players is smaller than the max players per table
        string name = Request["name"];
        if (Validation.IsValid() && Request["AddName"] == "Add" && db.QueryValue("SELECT Name FROM Players WHERE Name = @0 AND Room_Code = @1", name, roomCode) is null)
        {
            if (playercount < maxplayerstotal)
            {
                db.Execute("INSERT INTO Players (Name, Room_Code, Tbl_nr, Rebuy) VALUES (@0, @1, @2, @3)", name, roomCode, number, rebuy);
                name = null;
            }
            else
            {
                error = "You cant add more then " + maxplayerstotal + " players";
            }
        }

        //If clicked button is delete, delete player form database
        if (Request["delete"] == "delete")
        {
            db.Execute("DELETE FROM Players WHERE Name = @0 AND Room_Code = @1", Request.Form["rownameform"], roomCode);
        }

        //If clicked button is Proceed
        if (Request["Proceed"] == "Proceed")
        {
            //Shuffles players when number of players is bigger than min players per table 
            //And number of players is smaller than or equal to max players per table
            if (playercount > minplayerstable && playercount <= maxplayerstotal)
            {
                Shuffle shuffle = new Shuffle();
                shuffle.ShuffleTable(db, roomCode);
                Response.Redirect("~/PlayingAdmin.cshtml/" + roomCode);
            }
            //If min players per table is bigger than or equal to number of players show error
            else if (playercount <= minplayerstable)
            {
                error = "Add at least " + (minplayerstable + 1) + " players!";
            }
            //If number of players is bigger than max players per table show error
            else if (playercount > maxplayerstotal)
            {
                error = "You can't have more than " + maxplayerstotal + " players, because you only have " + maxtables + " tables and a maximum of " + maxplayerstable + " players per table";
            }
        }
    }
}
<head>
    <style>
        .validation-summary-errors {
            color: red;
            font-weight: bold;
        }

        .field-validation-error {
            font-weight: bold;
            color: red;
        }
    </style>
</head>
    <div class="py-5 text-center">
        <div class="container">
            <div class="row">
                <div class="mx-auto col-lg-6 col-10">
                    <h1>Add players</h1>
                    <span class="help-block">
                        @Html.ValidationSummary()
                        <strong style="color:red;"><b>@error</b></strong>
                    </span>
                    <form method="post">

                        <div class="form-group"> <input name="name" type="text" class="form-control" placeholder="Enter player name" id="form1" required autofocus> </div>
                        <div class="form-group"> <button type="submit" name="AddName" value="Add" class="btn btn-primary">Add</button> </div>

                    </form>
                    @if (db.QueryValue("SELECT * FROM Players WHERE Room_Code=@0", roomCode) != null)
                    {
                        <div style="padding: 15px 0px 0px 0px; text-align: center" class="col-md-12">
                            <div class="table-responsive" style="display: inline-block; top:0; width:350px;">
                                <table class="table serial">
                                    <tbody>
                                        <tr>
                                            <th>#</th>
                                            <th>Players</th>
                                            <th></th>
                                        </tr>
                                        <!--Places every name in a table-->
                                        @foreach (var row in db.Query("SELECT Name FROM Players WHERE Room_Code = @0", roomCode))
                                        {
                                            string rownameform = (string)row.Name;
                                            <tr>
                                                <td>
                                                    @row.Name
                                                </td>
                                                <td>
                                                    <form method="post">
                                                        <button type="submit" name="delete" value="delete" style="width:75px; float:right" class="btn btn-outline-secondary">X</button>
                                                        @Html.Hidden("rownameform", rownameform)
                                                    </form>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                                <form method="post">
                                    <div>
                                        <button type="submit" name="Proceed" value="Proceed" class="btn btn-primary">Proceed</button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    }
                    </div>
            </div>
        </div>
    </div>

<script>
    //Automatically numbered column
    function addRowCount(tableAttr) {
        $(tableAttr).each(function () {
            $('td:first-child', this).each(function (i) {
                $(this).before('<td>' + (i + 1) + '</td>');
            });
        });
    }
    addRowCount('.serial');
</script>

