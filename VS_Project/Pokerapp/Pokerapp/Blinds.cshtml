@using WebMatrix.Data
@using Microsoft.VisualBasic

@{
    Layout = "~/_Layout.cshtml";
    Page.Title = "Blindsettings";

    string connectionString = @"Data Source=(LocalDB)\MSSQLLocalDB;AttachDbFilename=|DataDirectory|\Database.mdf;Integrated Security=True";
    string provider = "System.Data.SqlClient";
    Database db = Database.OpenConnectionString(connectionString, provider);

    //Validations
    Validation.Add("small", Validator.Range(1, 999999999999999999, "Small blind has to be higher than or equal to 1"));
    Validation.Add("big", Validator.Range(1, 999999999999999999, "Big blind has to be higher than or equeal to 1"));

    //request the last 7 digits of the urgl (roomcode)
    string preUrl = Request.Url.AbsoluteUri;
    string[] link = preUrl.Split('/');
    int urlcode = Convert.ToInt32(link[4]);

    string error = "";
    //Count blinds
    int Blind_Round = (db.QueryValue("SELECT COUNT(ValueSB) FROM Blinds WHERE Room_Code = @0", urlcode));
    if (IsPost && Validation.IsValid())
    {
        //Add blindvalues to blinds
        if (Request["AddBlinds"] == "Add" && (!Request["small"].IsEmpty() && !Request["big"].IsEmpty()))
        {
            int small = Convert.ToInt32(Request["small"]);
            int big = Convert.ToInt32(Request["big"]);
            int small_blind = Convert.ToInt32(db.QueryValue("SELECT ValueSB FROM Blinds WHERE Room_Code = @0 ORDER BY ValueSB DESC", urlcode));
            int big_blind = Convert.ToInt32(db.QueryValue("SELECT ValueBB FROM Blinds WHERE Room_Code = @0 ORDER BY ValueBB DESC", urlcode));
            if (!Request["small"].IsEmpty() && !Request["big"].IsEmpty())
            {
                int hRound = Convert.ToInt32(db.QueryValue("SELECT ID FROM Blinds WHERE Room_Code = @0 ORDER BY ID DESC", urlcode));

                //if (Blind_Round <= hRound)
                //{
                //    if ((small_blind <= small) && (big_blind-1 <= big) && ())
                //    {

                //    }

                //Compares values, if values are lower than last value it will not be added to the database
                if ((small_blind < small) && (big_blind < big) && big > small)
                {
                    int id_old = Convert.ToInt32(db.QueryValue("SELECT ID FROM Blinds WHERE Room_Code = @0 ORDER BY ID DESC", urlcode));
                    int id_new = 1;
                    if (id_old != 0)
                    {
                        id_new = id_old + 1;
                        Blind_Round = id_new;
                    }
                    db.Execute("INSERT INTO Blinds (Room_Code, ID, ValueSB, ValueBB) VALUES (@0, @1, @2, @3)", urlcode, id_new, small, big);
                }
                else
                {
                    error = "The value(s) is/are too low.";
                }
            }
        }
        else
        {
            error = "Please enter a value";
        }
        //Delete selected blinds
        if (Request["delete"] == "delete")
        {
            string rowblind = Request.Form["rowblindform"];
            db.Execute("DELETE FROM Blinds WHERE ID = @0 AND Room_Code = @1", rowblind, urlcode);
        }
        //Goes to other page if the total of blinds is bigger than zero else an alert is shown
        if (Request["Proceed"] == "Proceed" || Request["Proceed"] == "Admin Page")
        {
            int blinds = Convert.ToInt32(db.QueryValue("SELECT COUNT(ValueBB) FROM Blinds WHERE Room_Code = @0", urlcode));
            if (blinds > 0)
            {
                if (Request.QueryString["t"] == null)
                {
                    string Url = "AdminPage.cshtml/" + urlcode;
                    Response.Redirect("~/" + Url);
                }
                else
                {
                    Response.Redirect("~/PlayingAdmin.cshtml/" + urlcode);
                }
            }
            else
            {
                <script>
                    $(document).ready(function () {
                        alert("Add a minimum of one blind at least!");
                    })
                </script>
            }
        }

    }
}
<head>
    <style>
        .validation-summary-errors {
            color: red;
            font-weight: bold;
        }

        .field-validation-error {
            font-weight: bold;
            color: red;
        }

        .help-block ul {
            list-style-type: none;
        }
    </style>
</head>

<div class="py-5 text-center">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <h3>Settings</h3>
                <span class="help-block">
                    @Html.ValidationSummary()
                </span>
                    <form style="display: inline-block" method="post">
                        <div class="form-row">
                            <div class="form-group col-md-6"> <label for="form5">Small blind</label> <input class="form-control" type="number" step="1" min="1" max="999999" pattern="[0-9]" inputmode="numeric" name="small" placeholder="Small Blind @Blind_Round" autofocus/> </div>
                            <div class="form-group col-md-6"> <label for="form6">Big blind</label> <input class="form-control" type="number" step="1" min="1" max="999999" pattern="[0-9]" inputmode="numeric" name="big" placeholder="Big Blind @Blind_Round" /> </div>
                        </div>
                        <button class="btn btn-primary" type="submit" name="AddBlinds" value="Add">Add</button>
                    </form>
            </div>
            </div>
        </div>
            <div class="py-5 text-center">
                <div class="container">
                    <div class="row">
                        <div class="mx-auto col-lg-6 col-10">
                            <p>@error</p>
                            @if (db.QueryValue("SELECT * FROM Blinds WHERE Room_Code=@0", urlcode) != null ) {

                                    <div class="row" style="justify-content:center">
                                        <div style="width:350px" class="table-responsive">
                                            <p>Blinds</p>
                                            <table class="table serial">
                                                <tbody>
                                                    <tr>
                                                        <th>Round</th>
                                                        <th>Small</th>
                                                        <th>Big</th>
                                                        <th></th>
                                                    </tr>
                                                    @foreach (var row in db.Query("SELECT ValueSB, ValueBB, ID FROM Blinds WHERE Room_Code = @0 ORDER BY ID ASC", urlcode))
                                                    {
                                                        int rowblindform = (int)row.ID;
                                                        <tr>

                                                            <td>
                                                                <p>@row.ValueSB</p>
                                                            </td>
                                                            <td>
                                                                <p>@row.ValueBB</p>
                                                            </td>
                                                            <td>
                                                                <form method="post">
                                                                    <button class="btn btn-outline-secondary" style="width:75px; float:right" type="submit" name="delete" value="delete">X</button>
                                                                    @Html.Hidden("rowblindform", rowblindform)
                                                                </form>
                                                            </td>
                                                        </tr>
                                                    }
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                    <form method="post">
                                        @if (Request.QueryString["t"] == null)
                                        {
                                            <input class="btn btn-primary" type="submit" name="Proceed" value="Proceed" />
                                        }
                                        else
                                        {
                                            <input class="btn btn-primary" type="submit" name="Proceed" value="Admin Page" />
                                        }
                                    </form>
                            }
                        </div>
                    </div>
                </div>
            </div>
</div>

<script>
    //Automatically numbered column
    function addRowCount(tableAttr) {
        $(tableAttr).each(function () {
            $('td:first-child', this).each(function (i) {
                $(this).before('<td>' + (i + 1) + '</td>');
            });
        });
    }
    addRowCount('.serial');
</script>


                
